server.address=0.0.0.0
server.port=8080

#????????? ???? ?????? ???? ??????? 32 ????? ??????, ????? Keys.hmacShaKeyFor() ?????? ??????
jwt.secret=your_secret_key_your_secret_key_

#Spring Security
spring.security.user.name = user
spring.security.user.password = user

# PostgreSQL Database
spring.datasource.url=jdbc:postgresql://dpg-d3sgtv15pdvs73e5m9bg-a.oregon-postgres.render.com:5432/teacherapp_db_iey1
spring.datasource.username=teacherapp_user
spring.datasource.password=UsgbnNtzjOx04vgjURSETG1UXeSx00kL
#local
#spring.datasource.url=jdbc:postgresql://localhost:5433/teacherapp_db
#spring.datasource.username=teacherapp_db_user
#docker
#spring.datasource.url=jdbc:postgresql://localhost:5433/teacherapp_db
#spring.datasource.username=postgres
#spring.datasource.password=admin
#spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Settings
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

spring.jackson.serialization.indent-output=true


# Twilio credentials
twilio.account.sid=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxx
twilio.auth.token=xxxxxxxxxxxxxxxxxxxxxxxxxxxx
twilio.whatsapp.from=+14155238886  # Twilio Sandbox WhatsApp number

# ?????? ???????????
lesson.student.phone=+7XXXXXXXXXX
lesson.teacher.phone=+7YYYYYYYYYY

# ?????????? ???? Jackson
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.http.converter.json=TRACE
logging.level.com.fasterxml.jackson.databind=TRACE

#for disconnect kafka
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration

#integration this google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile,https://www.googleapis.com/auth/calendar
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.client-name=Google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# Google Calendar
google.calendar.application-name=TeacherApp
google.calendar.webhook-url=https://http://localhost:3000/api/google/calendar/notifications
#google.calendar.webhook-url=https://teacherappthisdocker.onrender.com/api/google/calendar/notifications

# Frontend
app.frontend-url=http://localhost:3000
